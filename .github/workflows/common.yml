name: 코몬 CI/CD

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

jobs:
  pr-check:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest

    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Gradle 빌드 Jacoco Report 생성
        run: |
          ./gradlew clean test jacocoTestReport --rerun-tasks

      - name: 전체 XML 파일 확인
        run: |
          echo "Searching for all XML files..."
          find . -type f -name "*.xml" || echo "No XML files found"

      - name: Jacoco 파일 경로 확인
        run: |
          echo "Searching for jacocoTestReport.xml..."
          find build/reports/jacoco/test -name jacocoTestReport.xml || echo "jacocoTestReport.xml not found"

      - name: JaCoCo 리포트 파일 권한 확인 및 설정
        run: |
          if [ -f build/reports/jacoco/test/jacocoTestReport.xml ]; then
            echo "JaCoCo 리포트 파일이 존재합니다."
            ls -l build/reports/jacoco/test/jacocoTestReport.xml
            chmod +r build/reports/jacoco/test/jacocoTestReport.xml
            echo "읽기 권한이 추가되었습니다."
          else
            echo "JaCoCo 리포트 파일을 찾을 수 없습니다."
            exit 1
          fi

      - name: JaCoCo 코드 커버리지 리포트를 PR에 코멘트로 등록
        uses: madrapps/jacoco-report@v1.2
        with:

          paths: 'build/reports/jacoco/test/jacocoTestReport.xml'
          token: ${{ secrets.GITHUB_TOKEN }}



          min-coverage-overall: 80
          min-coverage-changed-files: 80
          debug-mode: true


  deploy:



    if: github.event_name == 'push' && github.repository == 'owner/repo'
    runs-on: ubuntu-latest
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: application-secret.properties 파일 생성
        run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties

      - name: 테스트 및 빌드
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./common.jar

      - name: SCP를 통해 EC2에 빌드된 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: common.jar
          target: /home/ubuntu/common-be/temp

      - name: SSH를 통해 EC2에 접속하여 서비스 재시작
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/common-be/current
            mkdir /home/ubuntu/common-be/current
            mv /home/ubuntu/common-be/temp/common.jar /home/ubuntu/common-be/current/common.jar
            sudo systemctl stop backend.service
            sudo systemctl start backend.service
