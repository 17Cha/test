name: 코몬 CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Gradle 빌드 및 테스트 실행
        run: ./gradlew clean build

      - name: JaCoCo 코드 커버리지 리포트 생성
        run: ./gradlew jacocoTestReport

      - name: 테스트 결과를 PR에 코멘트로 등록
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/*.xml'

      - name: JaCoCo 코드 커버리지 리포트를 PR에 코멘트로 등록
        uses: madrapps/jacoco-report@v1.2
        with:
          paths: '**/build/reports/jacoco/test/jacocoTestReport.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80

  deploy:
    if: github.event_name == 'push' && github.repository == 'owner/repo'
    runs-on: ubuntu-latest
    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: application-secret.properties 파일 생성
        run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties

      - name: 테스트 및 빌드
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./common.jar

      - name: SCP를 통해 EC2에 빌드된 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: common.jar
          target: /home/ubuntu/common-be/temp

      - name: SSH를 통해 EC2에 접속하여 서비스 재시작
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/common-be/current
            mkdir /home/ubuntu/common-be/current
            mv /home/ubuntu/common-be/temp/common.jar /home/ubuntu/common-be/current/common.jar
            sudo systemctl stop backend.service
            sudo systemctl start backend.service
