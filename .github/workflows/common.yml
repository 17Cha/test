name: 코몬 CI/CD

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

jobs:
  # PR 체크 작업
  pr-check:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-24.04
    steps:
      # 코드 가져오기
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      # JDK 설치
      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:

          distribution: temurin
          java-version: 21

      # 테스트 실행 및 Jacoco 리포트 생성
      - name: 테스트 및 Jacoco 리포트 생성
        run: ./gradlew clean test jacocoTestReport

      # Jacoco 리포트 파일 경로 확인 (디버깅용)
      - name: List Jacoco Report Files
        run: find build/reports/jacoco -type f

      # 테스트 결과를 PR에 코멘트로 등록
      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: '**/build/reports/jacoco/test/jacocoTestReport.xml'
          github_token: ${{ secrets.PAT_TOKEN }}

  # 배포 작업
  deploy:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'Merge pull request')
    runs-on: ubuntu-24.04
    steps:
      # 코드 가져오기
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      # JDK 설치
      - name: JDK 21버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # application-secret.properties 파일 생성
      - name: application-secret.properties 파일 만들기
        run: echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" > ./src/main/resources/application-secret.properties

      # 테스트 및 빌드
      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      # 빌드된 파일 이름 변경
      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./common.jar

      # 빌드 파일을 EC2로 전송
      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: common.jar
          target: /home/ubuntu/common-be/temp

      # EC2에서 배포
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/common-be/current
            mkdir /home/ubuntu/common-be/current
            mv /home/ubuntu/common-be/temp/common.jar /home/ubuntu/common-be/current/common.jar
            sudo systemctl stop backend.service
            sudo systemctl start backend.service
